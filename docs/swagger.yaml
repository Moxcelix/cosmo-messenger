definitions:
  authservice_api.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  authservice_api.loginResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  authservice_api.refreshRequest:
    type: object
  authservice_api.refreshResponse:
    type: object
  authservice_api.validateRequest:
    type: object
  authservice_api.validateResponse:
    type: object
  userservice_api.infoResponse:
    properties:
      bio:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  userservice_api.registerRequest:
    properties:
      bio:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
  userservice_api.registerResponse:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates user and returns JWT tokens
      parameters:
      - description: User credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/authservice_api.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authservice_api.loginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User login
      tags:
      - auth
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: Returns new access token by refresh token
      parameters:
      - description: Refresh credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/authservice_api.refreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authservice_api.refreshResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User refresh token
      tags:
      - auth
  /api/v1/auth/validate:
    post:
      consumes:
      - application/json
      description: Returns userID if access token is valid
      parameters:
      - description: Access credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/authservice_api.validateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authservice_api.validateResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Validates users access token
      tags:
      - auth
  /api/v1/users/get_info:
    get:
      description: Returns information about a user by username
      parameters:
      - description: Username
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userservice_api.infoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get info about user
      tags:
      - users
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Creates a new user in system
      parameters:
      - description: User data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/userservice_api.registerRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/userservice_api.registerResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: User registration
      tags:
      - users
swagger: "2.0"
